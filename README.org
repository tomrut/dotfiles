#+title: Dot files and scripts used on Linux
#+AUTHOR: tomrut
#+OPTIONS: toc:3
#+OPTIONS: p:t

* Nixos configuration
There are three general nixos configurations sitting in the nixos directory.
** laptop
** common - shared modules
*** sway
*** mounting
*** podman
*** monitoring
** desktop
** home-manager - the common part used by laptop and desktop
*** nixvim
*** home-laptop
*** home-desktop
*** home
** nixos-server - small nix server with samba and sshd for storing and sharing data

* Nixos commands
#+begin_src bash
  sudo nixos-rebuild switch --no-write-lock-file --flake .#nixos-laptop
#+end_src

* Scripts
** Playing youtube using ~yt-dlp~ + ~mpv~ player.
This script is supposed to be run from active youtube tab in ~firefox~ browser. It can be adjusted for chrome by changing ~--class~ parameter. The best is to attach it as shortcut in your Window Manager.
#+begin_src shell

#!/bin/bash
window_id=$(xdotool search --onlyvisible --class "firefox")
xdotool key --window $window_id --delay 20 --clearmodifiers ctrl+l ctrl+c Escape

yt-dlp -o -  $(xclip -o)|mpv -

#+end_src
** Playing music - command line
I use mpg123 to play my mp3 music files for years. Recently I've found fzf (fuzzy find) tool and I've got an idea to use it to accelerate search and kick of playing songs from my music gallery.

Below you will find three handy scripts I've created for quick finding and playing of music:

*** [[HTTPS://github.com/junegunn/fzf][FZF]] + [[https://moc.daper.net][mocp]] [[file:bin/p]]
It uses _mocp_ to play the songs from selected directory and its subdirectories. Its advantage over mpg123 is that it can also play flac files if you have installed /flac/ decoder.
#+begin_src shell

#!/bin/bash
# depends on: fzf and mocp (music on console)

musicDir=~/Music
fzfSelectedDir="$(find $musicDir -type d|fzf)"
mocp -m "$fzfSelectedDir" -c -a "$fzfSelectedDir" -p
mocp
#+end_src
*** [[HTTPS://github.com/junegunn/fzf][FZF]] + mpg123 + playlist creation [[file:bin/m1]]
It creates a playlist, saves it in selected directory and uses mpg123 to play it.
#+begin_src shell

#!/bin/bash
# depends on: fzf and mpg123 - create a list.m3u file in selected folder then passes it to play to mpg123

musicDir=~/Music
fzfSelectedDir="$(find $musicDir -type d|fzf)"
cd "$fzfSelectedDir"
find ./ -iregex '.*.mp.*' -type f -print > list.m3u
mpg123 --list list.m3u
#+end_src
*** [[HTTPS://github.com/junegunn/fzf][FZF]] + mpg123 [[file:bin/m2]]
It plays songs from selected directory passing songs list directly to mpg123. You need to use ctrl+c to go to next track.
#+begin_src shell
#!/bin/bash
# depends on: fzf and mpg123 - need to do ctrl+c to go to next track

musicDir=~/Music
fzfSelectedDir="$(find $musicDir -type d|fzf)"
cd "$fzfSelectedDir"
find ./ -iname '*.mp3' -type f -print | mpg123 --list -

#+end_src

** Multimedia files conversion
*** mp4 to mp3
**** [[file:bin/mp4intomp3.sh][mp4intomp3]] - it uses ~avconv~ for doing conversion
**** [[file:bin/mp42mp3.sh][mp42mp3.sh]] - it uses ~ffmpeg~
**** [[file:bin/mp4tomp3.sh][mp4tomp3]] - it uses ~fmpeg~ and ~lame~
*** 3gp to mp3
**** [[file:bin/3gp2mp3.sh][3gp2mp3.sh]] - it uses ~avconv~ converter
* Neovim
** Shortcuts
[[nvim quick reference][ https://neovim.io/doc/user/quickref.html]]
 

| Shortcut | What does                                                       |
|----------+-----------------------------------------------------------------|
| CTRL-]   | jump to the tag under cursor - e.g. JSX component can be opened |
| CTRL-O   | go to Nth older position in jump list - go back in history      |
| CTRL-I   | go to Nth newer position in jump list - go next in history      |
|          |                                                                 |

** [[file:.config/nvim][.config/nvim]] neovim configuration
* Emacs
** Shortcuts
*** Org mode
**** format a word:select a fragment you need to format then use: ctrl+c ctrl+x ctrl+f then =choose= which /form/ you ~need~
*** .
** Doom Emacs configuration [[[file:.doom.d]]]
* Org mode hints
** Footnotes [fn:1] ala
** Subscript r_{d}
** Special Greek char and superscript: \pi{}r^{2}
** Drawers
Still outside the drawer
:mydrawer:
This is inside the drawer.
:END:
** Embedded latex example
:LOGBOOK:
- Note taken on [2023-05-07 nie 15:56] \\
  Work done.
:END:
#+STARTUP: latexpreview
\begin{equation}                        % arbitrary environments,
x=\sqrt{b}                              % even tables, figures
\end{equation}

#+STARTUP: nolatexpreview
[fn:1] Some small footnote.
** Dotmode
*** https://www.graphviz.org/doc/info/lang.html

#+BEGIN_SRC dot :file test-dot.png :cmdline -Kdot -Tpng

strict graph {
  a -- b;
  a -- b;
  b -- a [color=red];
}
#+END_SRC

#+RESULTS:
[[file:test-dot.png]]
* Linux
** Useful Commands
#+begin_src bash

touch -d "$(date -R -r /$HOME/last_backup.marker) - 10 days" /$HOME/last_backup.marker

find . -empty -type d -delete
# mv the files from subdirectories preserving the directory names in the filename separated by -
find . -name \*.mp3 -exec sh -c 'new=$(echo "{}" | tr "/" "-" | cut -c 3-); mv "{}" "$new"' \;


perl -MFile::Path -we '
    for my $file (glob "*.mp3") {
        my ($artist, $album, $title) = split /-/, $file, 3;
        mkpath "$artist";
        my $new = "$artist/$album - $title";
        rename $file, $new or die "$file -> $new: $!\n";
    }'

#+end_src
